Contextualizando contexts

Segundo a documentação do React (https://reactjs.org/docs/context.html), o Context (em português, contexto) fornece uma maneira 
de passar dados pela árvore de componentes sem ter que passar props manualmente em todos os níveis.

Geralmente, quando estamos desenvolvendo um projeto em React, os dados são passados por meio de props, de componente pai para filho.

Esse uso pode ser complicado para alguns tipos de propriedades que são exigidas por muitos componentes dentro de um aplicativo, 
como no nosso caso em que gostaríamos de mostrar quais filmes foram favoritados seja na página inicial ou na página de favoritos. 
A estrutura para iniciar um contexto é a seguinte:

const MeuContexto = createContext();

Cada objeto Context vem com um componente Provider React que permite que os componentes que estão usando esse 
contexto façam alterações nele.

<MeuContexto.Provider value={/* algum valor */}>

Após abranger o componente com o provider, você consegue acesso ao componente utilizando o hook useContext(MeuContexto).

Resumidamente, o contexto fornece uma maneira de compartilhar valores como esses entre componentes sem ter que passar 
explicitamente um prop por todos os níveis da árvore.


